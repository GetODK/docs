version: 2
jobs:
  build-odk1:
    working_directory: ~/work
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - run:
          name: Install checkout requirements
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install git-lfs
            git lfs install
      - run:
          name: Checkout binaries
          command: git lfs pull
      - run:
          name: Install build requirements
          command: |
            sudo apt-get install pngquant
            sudo apt-get install python-enchant
            sudo pip install -r requirements.txt
      - run:
          name: Style Guide Check
          command: |
            paths=$(git diff origin/master... --name-only)
            echo $paths
            sudo python style-test.py $paths -r odk1-src
            sudo python style-test.py $paths -r shared-src
      - run:
          name: Build ODK1 Documentation
          command: make odk1-deploy
      - run:
          name: Check spelling of ODK1 Documentation
          command: make odk1-spell-check
      - run:
          name: Build LaTex of ODK1 Documentation
          command: make odk1-latex
      - run:
          name: Compress images
          command: pngquant odk1-build/_images/*.png --force --ext .png --verbose
      - store_artifacts:
          path: odk1-build
          destination: odk1-build
      - persist_to_workspace:
          root: ~/work
          paths:
            - odk1-build/*
            - odk1-config/*
  build-pdf-odk1:
    working_directory: ~/work
    docker:
      - image: schickling/latex
    steps:
      - attach_workspace:
          at: ~/work
      - run:
          name: Build PDF
          command: |
              cd odk1-build/latex
              xelatex OpenDataKit.tex
              xelatex OpenDataKit.tex
              mkdir -p ../_downloads
              mv OpenDataKit.pdf ../_downloads/ODK-Documentation.pdf
      - store_artifacts:
          path: odk1-build/_downloads/ODK-Documentation.pdf
          destination: ODK-Documentation.pdf
      - persist_to_workspace:
          root: ~/work
          paths:
            - odk1-build/*
  build-odk2:
    working_directory: ~/work
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - run:
          name: Install checkout requirements
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install git-lfs
            git lfs install
      - run:
          name: Checkout binaries
          command: git lfs pull
      - run:
          name: Install build requirements
          command: |
            sudo apt-get install pngquant
            sudo apt-get install python-enchant
            sudo pip install -r requirements.txt
      - run:
          name: Style Guide Check
          command: |
            paths=$(git diff origin/master... --name-only)
            echo $paths
            sudo python style-test.py $paths -r odk2-src
            sudo python style-test.py $paths -r shared-src
      - run:
          name: Build ODK2 Documentation
          command: make odk2-deploy
      - run:
          name: Check spelling of ODK2 Documentation
          command: make odk2-spell-check
      - run:
          name: Build LaTex of ODK2 Documentation
          command: make odk2-latex
      - run:
          name: Compress images
          command: pngquant odk2-build/_images/*.png --force --ext .png --verbose
      - store_artifacts:
          path: odk2-build
          destination: odk2-build
      - persist_to_workspace:
          root: ~/work
          paths:
            - odk2-build/*
            - odk2-config/*
  build-pdf-odk2:
    working_directory: ~/work
    docker:
      - image: schickling/latex
    steps:
      - attach_workspace:
          at: ~/work
      - run:
          name: Build PDF
          command: |
              cd odk2-build/latex
              xelatex OpenDataKit2.tex
              xelatex OpenDataKit2.tex
              mkdir -p ../_downloads
              mv OpenDataKit2.pdf ../_downloads/ODK2-Documentation.pdf
      - store_artifacts:
          path: odk2-build/_downloads/ODK2-Documentation.pdf
          destination: ODK2-Documentation.pdf
      - persist_to_workspace:
          root: ~/work
          paths:
            - odk2-build/*
  deploy-odk1:
    working_directory: ~/work
    docker:
      - image: circleci/ruby:latest
    steps:
      - attach_workspace:
          at: ~/work
      - run:
          name: Install deploy requirements
          command: |
              if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" ]]; then \
                sudo apt-get install -y software-properties-common
                wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -
                sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
                sudo apt-get update
                sudo apt-get install -y adoptopenjdk-8-hotspot
                gem install s3_website && s3_website install
              fi
      - run:
          name: Push to S3
          command: |
              if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" ]]; then \
                s3_website push --config-dir=odk1-config
              fi
  deploy-odk2:
    working_directory: ~/work
    docker:
      - image: circleci/ruby:latest
    steps:
      - attach_workspace:
          at: ~/work
      - run:
          name: Install deploy requirements
          command: |
              if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" ]]; then \
                sudo apt-get install -y software-properties-common
                wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -
                sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
                sudo apt-get update
                sudo apt-get install -y adoptopenjdk-8-hotspot
                gem install s3_website && s3_website install
              fi
      - run:
          name: Push to S3
          command: |
              if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" ]]; then \
                s3_website push --config-dir=odk2-config
              fi
  deploy-shared:
    working_directory: ~/work
    docker:
      - image: circleci/ruby:latest
    steps:
      - attach_workspace:
          at: ~/work
      - run:
          name: Install deploy requirements
          command: |
              if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" ]]; then \
                sudo apt-get install -y software-properties-common
                wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -
                sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
                sudo apt-get update
                sudo apt-get install -y adoptopenjdk-8-hotspot
                gem install s3_website && s3_website install
              fi
      - run:
          name: Push to S3
          command: |
              if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" ]]; then \
                s3_website push --config-dir=shared-config
              fi

workflows:
  version: 2
  build_deploy:
    jobs:
      - build-odk1
      - build-pdf-odk1:
          requires:
            - build-odk1
      - build-odk2
      - build-pdf-odk2:
          requires:
            - build-odk2
      - deploy-odk1:
          requires:
            - build-odk1
            - build-pdf-odk1
          filters:
            branches:
              only: master
      - deploy-odk2:
          requires:
            - build-odk2
            - build-pdf-odk2
          filters:
            branches:
              only: master
